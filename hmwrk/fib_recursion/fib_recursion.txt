/*Amul Bham
Purpose: Demonstrate fibbonacci using recursion function*/

.data
/*Return address*/
.balign 4
return: .word 0

/*address of text to be displayed*/
.balign 4
message1: .asciz "Which term of the Fibonacci Sequence would you like to see? \n"

/*address of the number the user would like to see*/
.balign 4
sequence: .word 0

/*Set the format of the scan f and printf*/
.balign 4
format: .asciz "%d \n"

/*address of the fib number*/
.balign 4
fib: .word 0

/*Address for output*/
.balign 4
output: .asciz "%d \n"

.text
recursion:
push {lr,r0,r1,r2}



cmp r0, #0
beq _stop
cmp r0, #1 
beq _one

mov r2, r0
sub r0, r0, #1
sub r2, r2, #2

add r1, r1, r0
add r1, r1, r2 
add r3, r3, r1
bl recursion

_one:
add r3, r3, #1
_stop:
pop {lr,r0,r1,r2}





.global main

main:

push {lr,r0}

ldr R0, address_of_message1
bl printf

ldr R0, format_of_answer
ldr R1, sequence_number
bl scanf


ldr R0, sequence_number
ldr R0, [R0]
ldr R1, fib_number
ldr R1, [R1]


bl recursion


MOV R1, R3
ldr R0, address_of_output
bl printf

pop {lr,r0}


address_of_return : .word return
address_of_message1: .word message1
format_of_answer: .word format 
sequence_number: .word sequence
fib_number: .word fib
address_of_output: .word output


/* External */
.global printf
.global scanf